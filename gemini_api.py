from google import genai
from dotenv import dotenv_values
import PIL.Image
import numpy as np

class ModelApi():
    def __init__(self):
        config = dotenv_values(".env")
        self.__client = genai.Client(api_key=config.get("API_KEY"))

    def textQuery(self, text="Explain how AI works"):
        response = self.__client.models.generate_content(
            model="gemini-2.0-flash",
            contents=text,
        )
        print(response.text)
        return response.text

    def imageQuery(self, image_path, prompt):
        """
        Processes an image and generates a text response based on a prompt.
        Args:
            image_path: Path to the image file.
            prompt: A text prompt that guides the model's response.
                    Example: "Describe what is in this image." or
                             "What are the key elements in this image?"
        Returns:
            The text response generated by the model. Returns None if there's an error.
        """
        try:
            img = PIL.Image.open(image_path)
        except FileNotFoundError:
            print(f"Error: Image file not found at {image_path}")
            return None
        except Exception as e:
            print(f"Error opening image: {e}")
            return None

        try:
            response = self.__client.models.generate_content(
                model="gemini-2.0-flash",
                contents=[prompt, img]
            )
            print(response.text)
            return response.text
        except Exception as e:
            print(f"Error during image processing: {e}")
            return None